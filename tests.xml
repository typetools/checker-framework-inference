<!-- This should be moved into the build.gradble but I'm strapped for time. Sorry! -->
<project name="checkerframework" basedir="." default="run-tests">

    <property environment="env"/>
    <property name="dist" value="${basedir}/dist" />
    <property name="tests" value="${basedir}/tests" />
    <property name="testdata" value="${basedir}/testdata" />
    <property name="tests.src" value="${tests}/src" />
    <property name="tests.build" value="${tests}/build"/>
    <property name="tests.build.outputdir" value="${tests.build}/outputdir"/>
    <property name="build.reports" value="${tests.build}/reports"/>
    <property name="javac.lib" value="${dist}/javac.jar" />

    <!-- Defaults, used if the Ant invocation does not set a value. -->
    <property name="halt.on.test.error" value="true" />
    <property name="halt.on.test.failure" value="true" />

    <pathconvert pathsep=":" property="test.classpath">
        <path>
            <fileset dir="${dist}">
                <include name="*.jar"/>
            </fileset>
        </path>
    </pathconvert>

    <pathconvert pathsep=" " property="src.tests">
        <path>
            <fileset dir="${tests}">
                <include name="**/*.java"/>
            </fileset>
        </path>
    </pathconvert>

    <condition property="run.dist" value="false" else="true">
        <isset property="no.dist"/>
    </condition>


    <target name="dist" if="${run.dist}">
        <exec executable="${gradle}" failonerror="true">
            <arg value="dist"/>
        </exec>
    </target>

    <condition property="gradle" value="${gradle.executable}" else="gradle">
        <isset property="gradle.executable" />
    </condition>

    <target name="prep" depends="dist">
        <mkdir dir="${tests.build}"/>
        <mkdir dir="${tests.build.outputdir}"/>
        <mkdir dir="${build.reports}"/>

        <condition property="cfi.jar.exists">
            <available file="${dist}/checker-framework-inference.jar"/>
        </condition>

	<echo message="${cfi.jar.exists}"/>
        <fail unless="${cfi.jar.exists}" message="Checker Framework Inference must be built"/>
        <delete dir="${testdata}/tmp"/>
    </target>

    <target name="build-tests" description="Compile tests" depends="prep">

        <java fork="true"
              failonerror="true"
              classpath="${test.classpath}"
              classname="com.sun.tools.javac.Main">
            <jvmarg line="-Xbootclasspath/p:${javac.lib}"/>
            <arg value="-g"/>
            <!-- Make sure we only have Java 7 source code and generate Java 7 bytecode. -->
            <arg value="-source"/>
            <arg value="7"/>
            <arg value="-target"/>
            <arg value="7"/>
            <!-- To not get a warning about bootstrap classpath -->
            <arg value="-Xlint:-options"/>
            <arg line="-sourcepath ${tests}"/>
            <arg line="-d ${tests.build}"/>
            <arg line="${src.tests}"/>
        </java>
    </target>

    <target name="run-tests" depends="build-tests"
            description="Run tests for all checkers, WITHOUT building anything">


        <!-- set this on the command line for like -Dtest.filter="**/TargetedTest.java" to target specific tests-->
        <property name="test.filter" value="**/*Test.java"/>

        <condition property="should.emit.debug.str" value="true" else="false">
            <isset property="emit.test.debug"/>
        </condition>

        <condition property="debugger.str" value="-Xnoagent -Djava.compiler=NONE -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" else="">
            <isset property="debugger.on"/>
        </condition>

        <condition property="use.hacks.str" value="-Duse.hacks=true">
            <isset property="use.hacks"/>
        </condition>

        <condition property="path.afu.scripts.str" value="${path.afu.scripts}" else="">
            <isset property="path.afu.scripts"/>
        </condition>

        <condition property="path.inference.script.str" value="${path.inference.script}" else="./scripts/inference">
            <isset property="path.inference.script"/>
        </condition>

        <!-- Copied from -run-tests target -->
        <mkdir dir="${build.reports}"/>

        <junit fork="true"
               dir="${basedir}"
               printsummary="false"
               haltonerror="${halt.on.test.error}"
               haltonfailure="${halt.on.test.failure}">
            <!--Set JAVAC_JAR so the insert-annotations-to-source can use it-->
            <env key="JAVAC_JAR" value="${javac.lib}"/>
            <classpath path="${test.classpath}:${tests.build}"/>
            <jvmarg line="-Xbootclasspath/p:${javac.lib}"/>
            <jvmarg line="-ea"/>
            <jvmarg line="${debugger.str}"/>
            <sysproperty key="use.hacks" value="${use.hacks.str}"/>
            <sysproperty key="emit.test.debug" value="${should.emit.debug.str}"/>
            <sysproperty key="path.afu.scripts" value="${path.afu.scripts.str}"/>
            <sysproperty key="path.inference.script" value="${path.inference.script.str}"/>

            <formatter type="xml"/>
            <formatter type="brief" usefile="false"/>

            <batchtest todir="${build.reports}">
                <fileset dir="${tests}">
                    <include name="${test.filter}"/>
                    <exclude name="**/CFInferenceTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
</project>
